Day-1 Assignment

Qn:2 - Write a blog about objects and its internal representation in Javascript:-

Objects:-

•	Objects in JavaScript is the most important data-type and forms the building blocks 
for modern JavaScript. These objects are quite different from JavaScript’s primitive 
data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while 
these primitive data-types all store a single value each (depending on their types).

•	Objects are more complex and each object may contain any combination of these primitive 
data-types as well as reference data-types.

•	An object, is a reference data type. Variables that are assigned a reference value are 
given a reference or a pointer to that value. That reference or pointer points to the location 
in memory where the object is stored. The variables don’t actually store the value.

•	Objects in JavaScript may be defined as an unordered collection of related data, of primitive 
or reference types, in the form of “key: value” pairs. These keys can be variables or functions 
and are called properties and methods, respectively, in the context of an object.

Example:-If your object is a student, it will have properties like name, age, address, id, etc 
and methods like updateAddress, updateNam, etc.

Objects and properties:-

•	A JavaScript object has properties associated with it. A property of an object can be explained 
as a variable that is attached to the object. Object properties are basically the same as ordinary 
JavaScript variables, except for the attachment to objects. The properties of an object define the 
characteristics of the object. You access the properties of an object with a simple dot-notation.

Syntax:-
objectName.propertyName

•	JavaScript variables can also contain many values.Objects are variables too. But objects can 
contain many values.Object values are written as name : value pairs (name and value separated by a colon).

Example 1:-
let person = {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"};
•	Spaces and line breaks are not important. An object definition can span multiple lines.

Example 2:-
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};

•	The following example creates an empty JavaScript object, and then adds 4 properties.

Example 3:-
const person = {};
person.firstName = "John";
person.lastName = "Doe";
person.age = 50;
person.eyeColor = "blue";

•	The following example create a new JavaScript object using new Object(), and then adds 4 properties.

Example 4:-
const person = new Object();
person.firstName = "John";
person.lastName = "Doe";
person.age = 50;
person.eyeColor = "blue";


JavaScript Objects are Mutable:-

•	Objects are mutable: They are addressed by reference, not by value.If person is an object,
the following statement will not create a copy of person.

Example:-
const x = person;  // Will not create a copy of person.

•	The object x is not a copy of person. It is person. Both x and person are the same object. Any 
changes to x will also change person, because x and person are the same object.

Example:-
const person = {
   firstName:"John",
   lastName:"Doe",
   age:50, eyeColor:"blue"
}
const x = person;
x.age = 10;      // Will change both x.age and person.age
